import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';

// const publicRoutes = ['/', '/chats'];

export function middleware(request: NextRequest) {
  const { pathname } = request.nextUrl;
  const token = request.cookies.get('token')?.value;
  // console.log("‡∏ó‡∏î‡∏≠‡∏™‡∏≠‡∏ö:"+token)

  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ token ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ /login ‡∏´‡∏£‡∏∑‡∏≠ /register ‚Üí redirect ‡πÑ‡∏õ /chats
  if (token && (pathname === '/login' || pathname === '/register')) {
    return NextResponse.redirect(new URL('/chats', request.url));
  }

  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ token ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤ protected ‚Üí redirect ‡πÑ‡∏õ /login
  if (!token && pathname === '/chats') {
    return NextResponse.redirect(new URL('/login', request.url));
  }

  return NextResponse.next();
}

export const config = {
   matcher: ['/((?!_next|favicon.ico).*)'],
};


// export function middleware(request: NextRequest) {
//   console.log("üî• middleware ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
//   const token = request.cookies.get('token')?.value;

//   if (!token) {
//     return NextResponse.redirect(new URL('/login', request.url));
//   }

//   return NextResponse.next(); // ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ú‡πà‡∏≤‡∏ô
// }

// export const config = {
//   matcher: ['/chat/:path*'], // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å path ‡∏ó‡∏µ‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ /chat
// };
